//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GiupviecPalmy_com.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class giupviecpalmy_com_dbEntities : DbContext
    {
        public giupviecpalmy_com_dbEntities()
            : base("name=giupviecpalmy_com_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Advertise> Advertises { get; set; }
        public DbSet<Config> Configs { get; set; }
        public DbSet<GroupMember> GroupMembers { get; set; }
        public DbSet<GroupNew> GroupNews { get; set; }
        public DbSet<Image> Images { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<ModuleUser> ModuleUsers { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<PermissionModule> PermissionModules { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserModule> UserModules { get; set; }
        public DbSet<v_Member_GroupMember> v_Member_GroupMember { get; set; }
        public DbSet<v_ModuleUser> v_ModuleUser { get; set; }
        public DbSet<v_News_GroupNews> v_News_GroupNews { get; set; }
        public DbSet<v_UserModule> v_UserModule { get; set; }
    
        public virtual int sp_Advertise_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_GetByAll_Result> sp_Advertise_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetByAll_Result>("sp_Advertise_GetByAll");
        }
    
        public virtual ObjectResult<sp_Advertise_GetById_Result> sp_Advertise_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetById_Result>("sp_Advertise_GetById", idParameter);
        }
    
        public virtual int sp_Advertise_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Advertise_Insert(string name, string picture, Nullable<int> width, Nullable<int> height, string link, Nullable<int> click, string target, Nullable<int> position, Nullable<int> orders, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordersParameter = orders.HasValue ?
                new ObjectParameter("Orders", orders) :
                new ObjectParameter("Orders", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Insert", nameParameter, pictureParameter, widthParameter, heightParameter, linkParameter, clickParameter, targetParameter, positionParameter, ordersParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_Paging_Result> sp_Advertise_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_Paging_Result>("sp_Advertise_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Advertise_Update(Nullable<int> id, string name, string picture, Nullable<int> width, Nullable<int> height, string link, Nullable<int> click, string target, Nullable<int> position, Nullable<int> orders, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordersParameter = orders.HasValue ?
                new ObjectParameter("Orders", orders) :
                new ObjectParameter("Orders", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Update", idParameter, nameParameter, pictureParameter, widthParameter, heightParameter, linkParameter, clickParameter, targetParameter, positionParameter, ordersParameter, activeParameter);
        }
    
        public virtual int sp_Config_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetByAll_Result> sp_Config_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetByAll_Result>("sp_Config_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetById_Result> sp_Config_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetById_Result>("sp_Config_GetById", idParameter);
        }
    
        public virtual int sp_Config_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Config_Insert(string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, string freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping != null ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Insert", mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual ObjectResult<sp_Config_Paging_Result> sp_Config_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_Paging_Result>("sp_Config_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Config_Update(Nullable<int> id, string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, string freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping != null ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Update", idParameter, mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual int sp_Contact_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", idParameter);
        }
    
        public virtual int sp_Contact_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByAll");
        }
    
        public virtual int sp_Contact_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetById", idParameter);
        }
    
        public virtual int sp_Contact_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Contact_Insert(string name, string title, string email, string detail, Nullable<System.DateTime> sDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Insert", nameParameter, titleParameter, emailParameter, detailParameter, sDateParameter);
        }
    
        public virtual int sp_Contact_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<int> id, string name, string title, string email, string detail, Nullable<System.DateTime> sDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", idParameter, nameParameter, titleParameter, emailParameter, detailParameter, sDateParameter);
        }
    
        public virtual int sp_GroupMember_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupMember_GetByAll_Result> sp_GroupMember_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetByAll_Result>("sp_GroupMember_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupMember_GetById_Result> sp_GroupMember_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetById_Result>("sp_GroupMember_GetById", idParameter);
        }
    
        public virtual int sp_GroupMember_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupMember_Insert(string name, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Insert", nameParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_GroupMember_Paging_Result> sp_GroupMember_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_Paging_Result>("sp_GroupMember_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupMember_Update(Nullable<int> id, string name, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Update", idParameter, nameParameter, activeParameter);
        }
    
        public virtual int sp_GroupNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetByAll_Result> sp_GroupNews_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetByAll_Result>("sp_GroupNews_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupNews_GetById_Result> sp_GroupNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetById_Result>("sp_GroupNews_GetById", idParameter);
        }
    
        public virtual int sp_GroupNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupNews_Insert(string name, Nullable<int> ord, string title, string description, string keyword, string tag, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Insert", nameParameter, ordParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, indexParameter, priorityParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_Paging_Result> sp_GroupNews_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_Paging_Result>("sp_GroupNews_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupNews_Update(Nullable<int> id, string name, Nullable<int> ord, string title, string description, string keyword, string tag, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Update", idParameter, nameParameter, ordParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, indexParameter, priorityParameter, activeParameter);
        }
    
        public virtual int sp_Image_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Image_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Image_GetByAll_Result> sp_Image_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Image_GetByAll_Result>("sp_Image_GetByAll");
        }
    
        public virtual ObjectResult<sp_Image_GetById_Result> sp_Image_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Image_GetById_Result>("sp_Image_GetById", idParameter);
        }
    
        public virtual int sp_Image_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Image_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Image_Insert(string name, string picture, Nullable<int> width, Nullable<int> height, string link, Nullable<int> click, string target, Nullable<int> position, Nullable<int> orders, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordersParameter = orders.HasValue ?
                new ObjectParameter("Orders", orders) :
                new ObjectParameter("Orders", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Image_Insert", nameParameter, pictureParameter, widthParameter, heightParameter, linkParameter, clickParameter, targetParameter, positionParameter, ordersParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Image_Paging_Result> sp_Image_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Image_Paging_Result>("sp_Image_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Image_Update(Nullable<int> id, string name, string picture, Nullable<int> width, Nullable<int> height, string link, Nullable<int> click, string target, Nullable<int> position, Nullable<int> orders, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordersParameter = orders.HasValue ?
                new ObjectParameter("Orders", orders) :
                new ObjectParameter("Orders", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Image_Update", idParameter, nameParameter, pictureParameter, widthParameter, heightParameter, linkParameter, clickParameter, targetParameter, positionParameter, ordersParameter, activeParameter);
        }
    
        public virtual int sp_Member_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Member_GetByAll_Result> sp_Member_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetByAll_Result>("sp_Member_GetByAll");
        }
    
        public virtual ObjectResult<sp_Member_GetById_Result> sp_Member_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetById_Result>("sp_Member_GetById", idParameter);
        }
    
        public virtual int sp_Member_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Member_Insert(string name, string tel, string email, string address, string picture, string username, string password, Nullable<int> permiss)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Insert", nameParameter, telParameter, emailParameter, addressParameter, pictureParameter, usernameParameter, passwordParameter, permissParameter);
        }
    
        public virtual ObjectResult<sp_Member_Paging_Result> sp_Member_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_Paging_Result>("sp_Member_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Member_Update(Nullable<int> id, string name, string tel, string email, string address, string picture, string username, string password, Nullable<int> permiss)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Update", idParameter, nameParameter, telParameter, emailParameter, addressParameter, pictureParameter, usernameParameter, passwordParameter, permissParameter);
        }
    
        public virtual int sp_Menu_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Menu_GetByAll_Result> sp_Menu_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetByAll_Result>("sp_Menu_GetByAll");
        }
    
        public virtual ObjectResult<sp_Menu_GetById_Result> sp_Menu_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetById_Result>("sp_Menu_GetById", idParameter);
        }
    
        public virtual int sp_Menu_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Menu_Insert(string name, string tag, Nullable<int> idCategory, string content, string detail, string level, string title, string description, string keyword, string target, string link, Nullable<int> ord, Nullable<int> position, Nullable<bool> active, string picture)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Insert", nameParameter, tagParameter, idCategoryParameter, contentParameter, detailParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, targetParameter, linkParameter, ordParameter, positionParameter, activeParameter, pictureParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Paging_Result> sp_Menu_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Paging_Result>("sp_Menu_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Menu_Update(Nullable<int> id, string name, string tag, Nullable<int> idCategory, string content, string detail, string level, string title, string description, string keyword, string target, string link, Nullable<int> ord, Nullable<int> position, Nullable<bool> active, string picture)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Update", idParameter, nameParameter, tagParameter, idCategoryParameter, contentParameter, detailParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, targetParameter, linkParameter, ordParameter, positionParameter, activeParameter, pictureParameter);
        }
    
        public virtual int sp_News_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_News_GetByAll_Result> sp_News_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_Result>("sp_News_GetByAll");
        }
    
        public virtual ObjectResult<sp_News_GetByAll_GroupNews_Result> sp_News_GetByAll_GroupNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_GroupNews_Result>("sp_News_GetByAll_GroupNews");
        }
    
        public virtual ObjectResult<sp_News_GetById_Result> sp_News_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetById_Result>("sp_News_GetById", idParameter);
        }
    
        public virtual int sp_News_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_News_Insert(string name, string tag, string title, string keyword, string description, string picture, Nullable<System.DateTime> sDate, string content, string detail, Nullable<bool> index, Nullable<int> view, Nullable<int> idGroup, Nullable<int> ord, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Insert", nameParameter, tagParameter, titleParameter, keywordParameter, descriptionParameter, pictureParameter, sDateParameter, contentParameter, detailParameter, indexParameter, viewParameter, idGroupParameter, ordParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_News_Paging_Result> sp_News_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_Paging_Result>("sp_News_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_News_Update(Nullable<int> id, string name, string tag, string title, string keyword, string description, string picture, Nullable<System.DateTime> sDate, string content, string detail, Nullable<bool> index, Nullable<int> view, Nullable<int> idGroup, Nullable<int> ord, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Update", idParameter, nameParameter, tagParameter, titleParameter, keywordParameter, descriptionParameter, pictureParameter, sDateParameter, contentParameter, detailParameter, indexParameter, viewParameter, idGroupParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_PermissionModule_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_PermissionModule_GetByAll_Result> sp_PermissionModule_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_GetByAll_Result>("sp_PermissionModule_GetByAll");
        }
    
        public virtual ObjectResult<sp_PermissionModule_GetById_Result> sp_PermissionModule_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_GetById_Result>("sp_PermissionModule_GetById", iDParameter);
        }
    
        public virtual int sp_PermissionModule_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_PermissionModule_Insert(Nullable<int> adminID, Nullable<int> adminModuleID)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminModuleIDParameter = adminModuleID.HasValue ?
                new ObjectParameter("AdminModuleID", adminModuleID) :
                new ObjectParameter("AdminModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Insert", adminIDParameter, adminModuleIDParameter);
        }
    
        public virtual ObjectResult<sp_PermissionModule_Paging_Result> sp_PermissionModule_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_Paging_Result>("sp_PermissionModule_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_PermissionModule_Update(Nullable<int> iD, Nullable<int> adminID, Nullable<int> adminModuleID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminModuleIDParameter = adminModuleID.HasValue ?
                new ObjectParameter("AdminModuleID", adminModuleID) :
                new ObjectParameter("AdminModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Update", iDParameter, adminIDParameter, adminModuleIDParameter);
        }
    
        public virtual int sp_User_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_User_GetByAll_Result> sp_User_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetByAll_Result>("sp_User_GetByAll");
        }
    
        public virtual ObjectResult<sp_User_GetById_Result> sp_User_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetById_Result>("sp_User_GetById", iDParameter);
        }
    
        public virtual int sp_User_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_User_Insert(string fullName, string userName, string password, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string email, string phone, string address, string avatar, string signature, Nullable<System.DateTime> joinedTime, string description, Nullable<bool> active, Nullable<int> creatorID, Nullable<short> permission)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var joinedTimeParameter = joinedTime.HasValue ?
                new ObjectParameter("JoinedTime", joinedTime) :
                new ObjectParameter("JoinedTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var creatorIDParameter = creatorID.HasValue ?
                new ObjectParameter("CreatorID", creatorID) :
                new ObjectParameter("CreatorID", typeof(int));
    
            var permissionParameter = permission.HasValue ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Insert", fullNameParameter, userNameParameter, passwordParameter, genderParameter, dateOfBirthParameter, emailParameter, phoneParameter, addressParameter, avatarParameter, signatureParameter, joinedTimeParameter, descriptionParameter, activeParameter, creatorIDParameter, permissionParameter);
        }
    
        public virtual ObjectResult<sp_User_Paging_Result> sp_User_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_Paging_Result>("sp_User_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_User_Update(Nullable<int> iD, string fullName, string userName, string password, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string email, string phone, string address, string avatar, string signature, Nullable<System.DateTime> joinedTime, string description, Nullable<bool> active, Nullable<int> creatorID, Nullable<short> permission)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var joinedTimeParameter = joinedTime.HasValue ?
                new ObjectParameter("JoinedTime", joinedTime) :
                new ObjectParameter("JoinedTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var creatorIDParameter = creatorID.HasValue ?
                new ObjectParameter("CreatorID", creatorID) :
                new ObjectParameter("CreatorID", typeof(int));
    
            var permissionParameter = permission.HasValue ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Update", iDParameter, fullNameParameter, userNameParameter, passwordParameter, genderParameter, dateOfBirthParameter, emailParameter, phoneParameter, addressParameter, avatarParameter, signatureParameter, joinedTimeParameter, descriptionParameter, activeParameter, creatorIDParameter, permissionParameter);
        }
    
        public virtual int sp_UserModule_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_UserModule_GetByAll_Result> sp_UserModule_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_GetByAll_Result>("sp_UserModule_GetByAll");
        }
    
        public virtual ObjectResult<sp_UserModule_GetById_Result> sp_UserModule_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_GetById_Result>("sp_UserModule_GetById", iDParameter);
        }
    
        public virtual int sp_UserModule_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_UserModule_Insert(string name, string description, Nullable<bool> active, Nullable<int> order)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Insert", nameParameter, descriptionParameter, activeParameter, orderParameter);
        }
    
        public virtual ObjectResult<sp_UserModule_Paging_Result> sp_UserModule_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_Paging_Result>("sp_UserModule_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_UserModule_Update(Nullable<int> iD, string name, string description, Nullable<bool> active, Nullable<int> order)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Update", iDParameter, nameParameter, descriptionParameter, activeParameter, orderParameter);
        }
    }
}
